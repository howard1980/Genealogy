package com.beetlestech.nfe.main.db.base;

import java.util.List;

import com.maxiaohua.genealogy.fw.core.type.Alias;

/**
 * SQL条件を格納するクラスです。
 *
 * @author IBM GDC
 */
public class StatementDTO {
	/**
	 * 動的検索条件のWhere分です。
	 */
	@Alias("動的検索条件")
	private StringBuilder _dynamicWhereCondition;
	
	/**
	 * 動的検索条件のWhere分です。
	 */
	@Alias("動的検索条件")
	private StringBuilder _dynamicWhereCondition2;

	/**
	 * ソード条件です。
	 */
	@Alias("ソード条件")
	private StringBuilder _orderByCondition;

	/**
	 * パラメーター値です。
	 */
	@Alias("パラメーター値")
	private List<Object> values;

	/**
	 * エスケープフラグです。
	 */
	@Alias("escapeフラグ")
	private boolean escapeFlag;

	/**
	 * @return the values
	 */
	public List<Object> getValues() {
		return values;
	}

	/**
	 * @param values the values to set
	 */
	public void setValues(
			List<Object> values) {
		this.values = values;
	}

	/**
	 * @return SQL文
	 */
	public String getSQLStatement() {
		return StatementUtil.getSqlStatement(this);
	}
	
	/**
	 * @return SQL文
	 */
	public String getSQLStatement2() {
		return StatementUtil.getSqlStatement2(this);
	}

	/**
	 * @return orderbyのSQL文
	 */
	public String getSQLOrderByStatement() {
		return get_orderByCondition().toString();
	}

	/**
	 * @param _dynamicWhereCondition the _dynamicWhereCondition to set
	 */
	public void set_dynamicWhereCondition(
			StringBuilder _dynamicWhereCondition) {
		this._dynamicWhereCondition = _dynamicWhereCondition;
	}

	/**
	 * @return the _dynamicWhereCondition
	 */
	public StringBuilder get_dynamicWhereCondition() {
		return _dynamicWhereCondition;
	}
	
	/**
	 * @param _dynamicWhereCondition the _dynamicWhereCondition to set
	 */
	public void set_dynamicWhereCondition2(
			StringBuilder _dynamicWhereCondition2) {
		this._dynamicWhereCondition2 = _dynamicWhereCondition2;
	}

	/**
	 * @return the _dynamicWhereCondition
	 */
	public StringBuilder get_dynamicWhereCondition2() {
		return _dynamicWhereCondition2;
	}

	/**
	 * @return the escapeFlag
	 */
	public boolean isEscapeFlag() {
		return escapeFlag;
	}

	/**
	 * @param escapeFlag the escapeFlag to set
	 */
	public void setEscapeFlag(
			boolean escapeFlag) {
		this.escapeFlag = escapeFlag;
	}

	public StringBuilder get_orderByCondition() {
		return _orderByCondition;
	}

	public void set_orderByCondition(
			StringBuilder _orderByCondition) {
		this._orderByCondition = _orderByCondition;
	}

}
