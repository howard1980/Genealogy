package com.maxiaohua.genealogy.fw.core.memory.db.impl;

import java.util.ArrayList;
import java.util.List;

import redis.clients.jedis.JedisPoolConfig;
import redis.clients.jedis.JedisShardInfo;
import redis.clients.jedis.ShardedJedis;
import redis.clients.jedis.ShardedJedisPool;



public class MemoryDBSupport {
    private static ShardedJedis shardedJedis;//切片额客户端连接
    private static ShardedJedisPool shardedJedisPool;//切片连接池
    
    public MemoryDBSupport() 
    { 
        initialPool(); 
        initialShardedPool(); 
        shardedJedis = shardedJedisPool.getResource(); 
    } 
 
    public static ShardedJedis getJedisInstance(){
    	if(shardedJedis==null){
    		initialShardedPool(); 
    		shardedJedis = shardedJedisPool.getResource(); 
    	}
    	return shardedJedis;
    }
    
    /**
     * 初始化非切片池
     */
    private void initialPool() 
    { 
        // 池基本配置 
        JedisPoolConfig config = new JedisPoolConfig();

        config.setMaxActive(20); 
        config.setMaxIdle(5); 
        config.setMaxWait(1000l); 
        config.setTestOnBorrow(false); 
    }
    
    /** 
     * 初始化切片池 
     */ 
    private static void initialShardedPool() 
    { 
        // 池基本配置 
        JedisPoolConfig config = new JedisPoolConfig(); 
        config.setMaxActive(1024); 
        config.setMaxIdle(200); 
        config.setMaxWait(1000l); 
        config.setTestOnBorrow(true); 
        config.setTestOnReturn(true);
        // slave链接 
        List<JedisShardInfo> shards = new ArrayList<JedisShardInfo>(); 
        shards.add(new JedisShardInfo("127.0.0.1", 6379)); 

        // 构造池 
        shardedJedisPool = new ShardedJedisPool(config, shards); 
    } 
     
    public String setex(String name,String value,int s){
    	return shardedJedis.setex(name, s, value);
    }
    
    public boolean exists(String name){
    	return shardedJedis.exists(name);
    }
    
    public String get(String key){
    	return shardedJedis.get(key);
    }
}
