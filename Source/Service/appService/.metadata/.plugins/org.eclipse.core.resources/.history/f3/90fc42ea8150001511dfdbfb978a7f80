package com.maxiaohua.genealogy.fw.web.rest;

import java.io.IOException;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;

import com.beetlestech.nfe.fw.core.dao.CISSqlSessionFactory;


@Path("sxxc")
public class CISRestController extends AbstractRestController {

	
	private static final String SLASH = "/";

	
	private static final String ROOT_PATH = "/sxxc/";

	
	private static final int ROOT_LENGTH = 6;

	
	public CISRestController() {
	}

	
	@GET
	@Path("/{action}")
	@Produces({ MediaType.APPLICATION_JSON })
	public String doGetNoParam(
			@Context ServletContext servletContext,
			@Context HttpServletRequest request,
			@Context HttpServletResponse response,
			@PathParam("action") String serviceId) {

		
		String url = removeRootPath(request.getRequestURI());

		serviceId = getLastParameterBySlash(url);

		String jsonOut = runService(request, response, CISSqlSessionFactory.DEFAULT_ENVIRONMENT_ID, serviceId, "{}");
		return jsonOut;
	}

	@POST
	@Path("/{action}")
	//@Consumes({ MediaType.APPLICATION_FORM_URLENCODED })
	@Produces({ MediaType.APPLICATION_JSON})
	public String doPost(
			@Context ServletContext servletContext,
			@Context HttpServletRequest request,
			@Context HttpServletResponse response,
			@PathParam("action") String serviceId,
			String json) throws IOException {

		
		String url = removeRootPath(request.getRequestURI());

		serviceId = getLastParameterBySlash(url);

		String jsonOut = runService(request, response, CISSqlSessionFactory.DEFAULT_ENVIRONMENT_ID, serviceId, json);
		return jsonOut;
	}
	
	@POST
	@Path("/{action}")
	@Consumes({ MediaType.MULTIPART_FORM_DATA })
	@Produces({ MediaType.APPLICATION_JSON })
	public String doPost4Upload(
			@Context ServletContext servletContext,
			@Context HttpServletRequest request,
			@Context HttpServletResponse response,
			@PathParam("action") String serviceId) {

		
		String url = removeRootPath(request.getRequestURI());

		serviceId = getLastParameterBySlash(url);

		String jsonOut = runService(request, response, CISSqlSessionFactory.DEFAULT_ENVIRONMENT_ID, serviceId, null);
		return jsonOut;
	}

	
	@GET
	@Path("/{action}/{param}")
	@Produces({ MediaType.APPLICATION_JSON })
	public String doGet(
			@Context ServletContext servletContext,
			@Context HttpServletRequest request,
			@Context HttpServletResponse response,
			@PathParam("action") String serviceId,
			@PathParam("param") String json) {

		
		String url = removeRootPath(request.getRequestURI());

		serviceId = getParameterBySlash(url);

		json = getLastParameterBySlash(url);

		String jsonOut = runService(request, response, CISSqlSessionFactory.DEFAULT_ENVIRONMENT_ID, serviceId, json);
		return jsonOut;
	}

	
	@GET
	@Path("/{sysId}/{action}/{param}")
	@Produces({ MediaType.APPLICATION_JSON })
	public String doGet(
			@Context ServletContext servletContext,
			@Context HttpServletRequest request,
			@Context HttpServletResponse response,
			@PathParam("sysId") String sysId,
			@PathParam("action") String serviceId,
			@PathParam("param") String json) {

		
		String url = removeRootPath(request.getRequestURI());

		sysId = getParameterBySlash(url);

		url = url.substring(url.indexOf(SLASH) + 1);

		serviceId = getParameterBySlash(url);

		json = getLastParameterBySlash(url);

		String jsonOut = runService(request, response, sysId, serviceId, json);
		return jsonOut;
	}

	
	@POST
	@Path("/{sysId}/{action}")
	@Consumes({ MediaType.APPLICATION_FORM_URLENCODED })
	@Produces({ MediaType.APPLICATION_JSON })
	public String doPost(
			@Context ServletContext servletContext,
			@Context HttpServletRequest request,
			@Context HttpServletResponse response,
			@PathParam("sysId") String sysId,
			@PathParam("action") String serviceId,
			String json) {

		
		
		
		String url = removeRootPath(request.getRequestURI());

		sysId = getParameterBySlash(url);

		serviceId = getLastParameterBySlash(url);

		String jsonOut = runService(request, response, sysId, serviceId, json);
		return jsonOut;
	}

	
	@POST
	@Path("/{sysId}/{action}")
	@Consumes({ MediaType.MULTIPART_FORM_DATA })
	@Produces({ MediaType.APPLICATION_JSON })
	public String doPost4Upload(
			@Context ServletContext servletContext,
			@Context HttpServletRequest request,
			@Context HttpServletResponse response,
			@PathParam("sysId") String sysId,
			@PathParam("action") String serviceId) {

		
		String url = removeRootPath(request.getRequestURI());

		sysId = getParameterBySlash(url);

		serviceId = getLastParameterBySlash(url);

		String jsonOut = runService(request, response, sysId, serviceId, null);
		return jsonOut;
	}

	
	private String removeRootPath(
			String url) {
		int rootIndex = url.indexOf(ROOT_PATH);

		String value = url.substring(rootIndex + ROOT_LENGTH);

		return value;
	}

	
	private String getParameterBySlash(
			String url) {
		String pamameter = url.substring(0, url.indexOf(SLASH));
		return pamameter;
	}

	
	private String getLastParameterBySlash(
			String url) {
		String pamameter;
		if (url.indexOf(SLASH) == url.length() - 1) {
			pamameter = url.substring(0, url.length() - 1);
		} else {
			pamameter = url.substring(url.indexOf(SLASH) + 1);
		}

		return pamameter;
	}
}